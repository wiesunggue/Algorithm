# 유클리드 알고리즘
# gcd(p,d)를 구하는 방법 -> gcd(q,p%q)를 이용한다.
# gcd는 최대공약수
def gcd(p,q):
    if q==0:
        return p
    return gcd(q,p%q)

# 모듈로 연산
# 모듈로 연산은 더하기의 순서에 영향을 받지 않느다
# 마찬가지로 뺄셈 곱셈 덧셈에 모두 성립
# 하지만 나눗셈 연산이 있다면 모듈로 연산 항상 성립하지 않는다
# 만약 b와 M이 서로소일때만 존재

# 이해를 못했다 페르마의 소정리를 찾아봐야 한다.
# 나눗셈에 대해서 모듈로 유지하기 (M이 소수)
# modinv(b,M) = b^(M-2)%M
# (a/b)%M -> (a*modinv(b,M))%M

# M이 소수가 아니라면
# Ab + BM = 1 인 A,B를 찾아야 한다.


# 정수론의 추가적인 주제로
# 확장 유클리드 알고리즘 -> gcd(p,q) = ap+bq
# 중국인의 나머지 정리 ->
# 루카스의 정리 -> 모듈로 연산을 이용한 경우 nCr을 빠르게 계산해줌